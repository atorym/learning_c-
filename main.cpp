/*
   Задание 1
   Почему символьные константы лучше литеральных (магических чисел)? Почему использование const лучше использования директив #define?

   Использование литеральных констант усложняет внесение в нее изменений + упрощает понимание кода.
   Так же в отличии от #define состояние констант отображается в отладчике + #define всегда обьявляется в глобальной области видимости,
   что в свою очередь увеличивает вероятность конфликта имен.

   Задание 2
   Выберите подходящий тип данных для переменных в каждой из следующих ситуаций. Будьте как можно более конкретными.
   Если ответом является целочисленный тип данных, то используйте соответствующий тип с фиксированным размером (например, int16_t).
   Если переменная должна быть константной, то так и отвечайте.

   *Возраст пользователя.                                                                     short
   *Нравится ли определенный цвет пользователю?                                               bool
   *Число Пи.                                                                                 const double
   *Количество страниц в учебнике.                                                            const short
   *Цена акций в долларах (дробь присутствует).                                               double
   *Сколько раз вы моргнули за всю свою жизнь? (Примечание: Ответ исчисляется в миллионах)    long long
   *Пользователь выбирает опцию с помощью ввода определенной буквы.                           char
   */
#include <iostream>


int main() {
#ifdef WIN32
  setlocale(LC_ALL, "Russian");
#endif
  /*
   Задание 3
   Напишите следующую программу. Сначала пользователю предлагается ввести 2 числа типа с плавающей точкой (используйте тип double).
   Затем предлагается ввести один из следующих математических символов: +, -, * или /. Программа выполняет выбранную пользователем математическую
   операцию между двумя числами, а затем выводит результат на экран. Если пользователь ввел некорректный символ, то программа ничего не должна выводить.
   Например:
   Enter a double value: 7
   Enter a double value: 5
   Enter one of the following: +, -, *, or /: *
   7 * 5 = 35
   */
  std::wcout << L"Далее введите 2 числа: ";
  double q,e;
  std::wcin >> q >> e;
  std::wcout << L"Далее введите тип желаемой операции (+,-,*,/): ";
  char operacia;
  std::cin >> operacia;
  if (operacia == '+'){
    q=q+e;
    std::wcout << L"Результат: " << q << std::endl;
  } else if(operacia == '-'){
    q=q-e;
    std::wcout << L"Результат: " << q << std::endl;
  } else if (operacia == '*'){
    q=q*e;
    std::wcout << L"Результат: " << q << std::endl;
  } else if (operacia == '/'){
    q=q/e;
    std::wcout << L"Результат: " << q << std::endl;
  } else {
    std::wcout << L"Дорогой, вы ввели хуйню";
  }

  return EXIT_SUCCESS;
}